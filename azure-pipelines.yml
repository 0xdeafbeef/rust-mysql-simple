trigger:
- master
- ci-*

jobs:
  - job: 'TestBasic'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      maxParallel: 10
      matrix:
        stable:
          RUST_TOOLCHAIN: stable
        beta:
          RUST_TOOLCHAIN: beta
        nightly:
          RUST_TOOLCHAIN: nightly
    steps:
    - bash: |
        sudo apt-get update
        sudo apt-get -y install mysql-server libmysqlclient-dev curl
        sudo service mysql start
        mysql -e "SET GLOBAL max_allowed_packet = 36700160;" -uroot -proot
      displayName: Install MySql
    - bash: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $(RUST_TOOLCHAIN)
      displayName: Install Rust
    - bash: |
        SSL=false COMPRESS=false cargo test
        SSL=true COMPRESS=false cargo test
        SSL=false COMPRESS=true cargo test
        SSL=true COMPRESS=true cargo test
      env:
        DATABASE_URL: mysql://root:root@127.0.0.1:3306/mysql
      displayName: Run tests

  - job: 'TestMySql'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      maxParallel: 10
      matrix:
        latest:
          MYSQL_VERSION: "latest"
        v80:
          MYSQL_VERSION: "8.0"
        v57:
          MYSQL_VERSION: "5.7"
        v56:
          MYSQL_VERSION: "5.6"
    steps:
    - bash: |
        sudo apt-get update
        sudo apt-get install docker.io netcat grep
        sudo systemctl unmask docker
        sudo systemctl start docker
        docker --version
      displayName: Install docker
    - bash: |
        docker run --rm --name some-mysql -v `pwd`:/root -d -e MYSQL_ROOT_PASSWORD=password mysql:$(MYSQL_VERSION) --max-allowed-packet=36700160 --local-infile
        while ! nc -W 1 localhost 3307 | grep -q -P '.+'; do sleep 1; done
      displayName: Run MySql in Docker
    - bash: |
        docker exec some-mysql bash -l -c "apt-get update"
        docker exec some-mysql bash -l -c "apt-get install -y curl clang libssl-dev pkg-config"
        docker exec some-mysql bash -l -c "curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable"
      displayName: Install Rust in docker
    - bash: |
        if [[ "5.6" != "$(MYSQL_VERSION)" ]]; then SSL=true; fi
        docker exec some-mysql bash -l -c "cd \$HOME && DATABASE_URL=$DATABASE_URL cargo test"
        docker exec some-mysql bash -l -c "cd \$HOME && DATABASE_URL=$DATABASE_URL COMPRESS=true cargo test"
        docker exec some-mysql bash -l -c "cd \$HOME && DATABASE_URL=$DATABASE_URL SSL=$SSL cargo test"
        docker exec some-mysql bash -l -c "cd \$HOME && DATABASE_URL=$DATABASE_URL SSL=$SSL COMPRESS=true cargo test"
      env:
        DATABASE_URL: mysql://root:password@127.0.0.1/mysql
      displayName: Run tests in Docker
